generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id           String      @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  username     String?     @unique
  email        String      @unique
  password     String
  role         String      @default("user")
  positionId   String?     @db.ObjectId
  position     Position?   @relation(fields: [positionId], references: [id])
  departmentId String?     @db.ObjectId
  department   Department? @relation(fields: [departmentId], references: [id])
  supervisorId String?     @db.ObjectId
  supervisor   User?       @relation("UserSupervisor", fields: [supervisorId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  subordinates User[]      @relation("UserSupervisor")
  kpis         KPI[]
}

model Position {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  users       User[]
}

model Department {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  users       User[]
}

model KPI {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  month     DateTime
  projectId String   @db.ObjectId
  project   Project  @relation(fields: [projectId], references: [id])
}

model Project {
  id           String        @id @default(auto()) @map("_id") @db.ObjectId
  projectName  String
  deliverables Deliverable[]
  kpis         KPI[]
}

model Deliverable {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  projectId String  @db.ObjectId
  project   Project @relation(fields: [projectId], references: [id])
  tasks     Task[]
  progress  Float
  status    String
  comments  String?
}

model Task {
  id               String      @id @default(auto()) @map("_id") @db.ObjectId
  deliverableId    String      @db.ObjectId
  deliverable      Deliverable @relation(fields: [deliverableId], references: [id])
  description      String
  startDate        DateTime
  endDate          DateTime
  timeSpent        Float
  progressAchieved Float
  status           String
  comments         String?
}
